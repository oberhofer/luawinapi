//////////////////////////////////////////////////////////////////////////
/**

  luawinapi - winapi wrapper for Lua
  Copyright (C) 2011 Klaus Oberhofer. See copyright notice in
  LICENSE file
  
  !!! This file is generated by genwrap.lua  !!!

*/////////////////////////////////////////////////////////////////////////

#pragma once

#include <windows.h>

#include "lua.h"

// self defined HMSGQUEUE type
#if (defined(USE_MSGQUEUE))
typedef HANDLE HMSGQUEUE;
#endif

void registerAbstractions(lua_State *L);

#if (defined(USE_MSGQUEUE))
int lua_pushMsgQueue( lua_State *L, HMSGQUEUE hdl );
HMSGQUEUE lua_toMsgQueue( lua_State *L, int idx );
#endif
int lua_pushDriver( lua_State *L, HDRVR hdl );
HDRVR lua_toDriver( lua_State *L, int idx );
int lua_pushWaveOut( lua_State *L, HWAVEOUT hdl );
HWAVEOUT lua_toWaveOut( lua_State *L, int idx );
int lua_pushMixerObject( lua_State *L, HMIXEROBJ hdl );
HMIXEROBJ lua_toMixerObject( lua_State *L, int idx );
int lua_pushWaveIn( lua_State *L, HWAVEIN hdl );
HWAVEIN lua_toWaveIn( lua_State *L, int idx );
int lua_pushMixer( lua_State *L, HMIXER hdl );
HMIXER lua_toMixer( lua_State *L, int idx );
int lua_pushMidiStream( lua_State *L, HMIDISTRM hdl );
HMIDISTRM lua_toMidiStream( lua_State *L, int idx );
int lua_pushMidiIn( lua_State *L, HMIDIIN hdl );
HMIDIIN lua_toMidiIn( lua_State *L, int idx );
int lua_pushIcon( lua_State *L, HICON hdl );
HICON lua_toIcon( lua_State *L, int idx );
int lua_pushWindow( lua_State *L, HWND hdl );
HWND lua_toWindow( lua_State *L, int idx );
int lua_pushRegion( lua_State *L, HRGN hdl );
HRGN lua_toRegion( lua_State *L, int idx );
int lua_pushMidiOut( lua_State *L, HMIDIOUT hdl );
HMIDIOUT lua_toMidiOut( lua_State *L, int idx );
int lua_pushDC( lua_State *L, HDC hdl );
HDC lua_toDC( lua_State *L, int idx );
int lua_pushMidi( lua_State *L, HMIDI hdl );
HMIDI lua_toMidi( lua_State *L, int idx );


