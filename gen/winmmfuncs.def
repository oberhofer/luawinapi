#
# Declaration file with WinAPI MMSystem functions
#

#######################################################################
# MMSystem

#WINMMAPI LRESULT  WINAPI CloseDriver(HDRVR,LPARAM,LPARAM);
#WINMMAPI HDRVR    WINAPI OpenDriver(LPCWSTR,LPCWSTR,LPARAM);
#WINMMAPI LRESULT  WINAPI SendDriverMessage(HDRVR,UINT,LPARAM,LPARAM);
#WINMMAPI HMODULE  WINAPI DrvGetModuleHandle(HDRVR);
#WINMMAPI HMODULE  WINAPI GetDriverModuleHandle(HDRVR);
#WINMMAPI LRESULT  WINAPI DefDriverProc(DWORD_PTR,HDRVR,UINT,LPARAM,LPARAM);

#######################################################################
# MMSystem SND

WINMMAPI BOOL WINAPI sndPlaySoundW(LPCWSTR,UINT);
WINMMAPI BOOL WINAPI PlaySoundW(LPCWSTR,HMODULE,DWORD);

#######################################################################
# MMSystem WAVE

WINMMAPI UINT WINAPI waveOutGetNumDevs();
WINMMAPI MMRESULT WINAPI waveOutGetDevCapsW(UINT_PTR,WAVEOUTCAPSW,UINT);
WINMMAPI MMRESULT WINAPI waveOutGetVolume(HWAVEOUT,[out]DWORD);
WINMMAPI MMRESULT WINAPI waveOutSetVolume(HWAVEOUT,DWORD);
WINMMAPI MMRESULT WINAPI waveOutGetErrorTextW(MMRESULT,[out,sizeparam=cchText]LPWSTR,UINT cchText);
WINMMAPI MMRESULT WINAPI waveOutOpen([out]HWAVEOUT,UINT,[in]WAVEFORMATEX,DWORD_PTR,DWORD_PTR,DWORD);
WINMMAPI MMRESULT WINAPI waveOutClose(HWAVEOUT);
WINMMAPI MMRESULT WINAPI waveOutPrepareHeader(HWAVEOUT,WAVEHDR,UINT);
WINMMAPI MMRESULT WINAPI waveOutUnprepareHeader(HWAVEOUT,WAVEHDR,UINT);
WINMMAPI MMRESULT WINAPI waveOutWrite(HWAVEOUT,WAVEHDR,UINT);
WINMMAPI MMRESULT WINAPI waveOutPause(HWAVEOUT);
WINMMAPI MMRESULT WINAPI waveOutRestart(HWAVEOUT);
WINMMAPI MMRESULT WINAPI waveOutReset(HWAVEOUT);
WINMMAPI MMRESULT WINAPI waveOutBreakLoop(HWAVEOUT);
WINMMAPI MMRESULT WINAPI waveOutGetPosition(HWAVEOUT,MMTIME,UINT);
WINMMAPI MMRESULT WINAPI waveOutGetPitch(HWAVEOUT,[out]DWORD);
WINMMAPI MMRESULT WINAPI waveOutSetPitch(HWAVEOUT,DWORD);
WINMMAPI MMRESULT WINAPI waveOutGetPlaybackRate(HWAVEOUT,[out]DWORD);
WINMMAPI MMRESULT WINAPI waveOutSetPlaybackRate(HWAVEOUT,DWORD);
WINMMAPI MMRESULT WINAPI waveOutGetID(HWAVEOUT,[out]UINT);
WINMMAPI MMRESULT WINAPI waveOutMessage(HWAVEOUT,UINT,DWORD_PTR,DWORD_PTR);
WINMMAPI UINT WINAPI waveInGetNumDevs();
WINMMAPI MMRESULT WINAPI waveInGetDevCapsW(UINT_PTR,WAVEINCAPSW,UINT);
WINMMAPI MMRESULT WINAPI waveInGetErrorTextW(MMRESULT,[out,sizeparam=cchText]LPWSTR,UINT cchText);
WINMMAPI MMRESULT WINAPI waveInOpen([out]HWAVEIN,UINT,[in]WAVEFORMATEX,DWORD_PTR,DWORD_PTR,DWORD);
WINMMAPI MMRESULT WINAPI waveInClose(HWAVEIN);
WINMMAPI MMRESULT WINAPI waveInPrepareHeader(HWAVEIN,WAVEHDR,UINT);
WINMMAPI MMRESULT WINAPI waveInUnprepareHeader(HWAVEIN,WAVEHDR,UINT);
WINMMAPI MMRESULT WINAPI waveInAddBuffer(HWAVEIN,WAVEHDR,UINT);
WINMMAPI MMRESULT WINAPI waveInStart(HWAVEIN);
WINMMAPI MMRESULT WINAPI waveInStop(HWAVEIN);
WINMMAPI MMRESULT WINAPI waveInReset(HWAVEIN);
WINMMAPI MMRESULT WINAPI waveInGetPosition(HWAVEIN,MMTIME,UINT);
WINMMAPI MMRESULT WINAPI waveInGetID(HWAVEIN,[out]UINT);
WINMMAPI MMRESULT WINAPI waveInMessage(HWAVEIN,UINT,DWORD_PTR,DWORD_PTR);


#######################################################################
# MMSystem MIDI

WINMMAPI UINT WINAPI midiOutGetNumDevs();
WINMMAPI MMRESULT WINAPI midiStreamOpen([out]HMIDISTRM,[out]UINT,DWORD,DWORD_PTR,DWORD_PTR,DWORD);
WINMMAPI MMRESULT WINAPI midiStreamClose(HMIDISTRM);
WINMMAPI MMRESULT WINAPI midiStreamProperty(HMIDISTRM,[out]BYTE,DWORD);
WINMMAPI MMRESULT WINAPI midiStreamPosition(HMIDISTRM,MMTIME,UINT);
WINMMAPI MMRESULT WINAPI midiStreamOut(HMIDISTRM,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiStreamPause(HMIDISTRM);
WINMMAPI MMRESULT WINAPI midiStreamRestart(HMIDISTRM);
WINMMAPI MMRESULT WINAPI midiStreamStop(HMIDISTRM);
WINMMAPI MMRESULT WINAPI midiConnect(HMIDI,HMIDIOUT,LPVOID);
WINMMAPI MMRESULT WINAPI midiDisconnect(HMIDI,HMIDIOUT,LPVOID);
WINMMAPI MMRESULT WINAPI midiOutGetDevCapsW(UINT_PTR,MIDIOUTCAPSW,UINT);
WINMMAPI MMRESULT WINAPI midiOutGetVolume(HMIDIOUT,[out]DWORD);
WINMMAPI MMRESULT WINAPI midiOutSetVolume(HMIDIOUT,DWORD);
WINMMAPI MMRESULT WINAPI midiOutGetErrorTextW(MMRESULT,[out,sizeparam=cchText]LPWSTR,UINT cchText);
WINMMAPI MMRESULT WINAPI midiOutOpen([out]HMIDIOUT,UINT,DWORD_PTR,DWORD_PTR,DWORD);
WINMMAPI MMRESULT WINAPI midiOutClose(HMIDIOUT);
WINMMAPI MMRESULT WINAPI midiOutPrepareHeader(HMIDIOUT,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiOutUnprepareHeader(HMIDIOUT,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiOutShortMsg(HMIDIOUT,DWORD);
WINMMAPI MMRESULT WINAPI midiOutLongMsg(HMIDIOUT,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiOutReset(HMIDIOUT);
WINMMAPI MMRESULT WINAPI midiOutCachePatches(HMIDIOUT,UINT,[out]WORD,UINT);
WINMMAPI MMRESULT WINAPI midiOutCacheDrumPatches(HMIDIOUT,UINT,[out]WORD,UINT);
WINMMAPI MMRESULT WINAPI midiOutGetID(HMIDIOUT,[out]UINT);
WINMMAPI MMRESULT WINAPI midiOutMessage(HMIDIOUT,UINT,DWORD_PTR,DWORD_PTR);
WINMMAPI UINT WINAPI midiInGetNumDevs();
WINMMAPI MMRESULT WINAPI midiInGetDevCapsW(UINT_PTR,MIDIINCAPSW,UINT);
WINMMAPI MMRESULT WINAPI midiInGetErrorTextW(MMRESULT,[out,sizeparam=cchText]LPWSTR,UINT cchText);
WINMMAPI MMRESULT WINAPI midiInOpen([out]HMIDIIN,UINT,DWORD_PTR,DWORD_PTR,DWORD);
WINMMAPI MMRESULT WINAPI midiInClose(HMIDIIN);
WINMMAPI MMRESULT WINAPI midiInPrepareHeader(HMIDIIN,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiInUnprepareHeader(HMIDIIN,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiInAddBuffer(HMIDIIN,MIDIHDR,UINT);
WINMMAPI MMRESULT WINAPI midiInStart(HMIDIIN);
WINMMAPI MMRESULT WINAPI midiInStop(HMIDIIN);
WINMMAPI MMRESULT WINAPI midiInReset(HMIDIIN);
WINMMAPI MMRESULT WINAPI midiInGetID(HMIDIIN,[out]UINT);
WINMMAPI MMRESULT WINAPI midiInMessage(HMIDIIN,UINT,DWORD_PTR,DWORD_PTR);


#######################################################################
# MMSystem AUX

WINMMAPI UINT WINAPI auxGetNumDevs();
WINMMAPI MMRESULT WINAPI auxGetDevCapsW(UINT_PTR,AUXCAPSW,UINT);
WINMMAPI MMRESULT WINAPI auxSetVolume(UINT,DWORD);
WINMMAPI MMRESULT WINAPI auxGetVolume(UINT,[out]DWORD);
WINMMAPI MMRESULT WINAPI auxOutMessage(UINT,UINT,DWORD_PTR,DWORD_PTR);


#######################################################################
# MMSystem MIXER

WINMMAPI UINT WINAPI mixerGetNumDevs();
WINMMAPI MMRESULT WINAPI mixerGetDevCapsW(UINT_PTR,MIXERCAPSW,UINT);
WINMMAPI MMRESULT WINAPI mixerOpen([out]HMIXER,UINT,DWORD_PTR,DWORD_PTR,DWORD);
WINMMAPI MMRESULT WINAPI mixerClose(HMIXER);
WINMMAPI DWORD WINAPI mixerMessage(HMIXER,UINT,DWORD_PTR,DWORD_PTR);
WINMMAPI MMRESULT WINAPI mixerGetLineInfoW(HMIXEROBJ,MIXERLINEW,DWORD);
#WINMMAPI MMRESULT WINAPI mixerGetID(HMIXEROBJ,UINT*,DWORD);
WINMMAPI MMRESULT WINAPI mixerGetLineControlsW(HMIXEROBJ,MIXERLINECONTROLSW,DWORD);
WINMMAPI MMRESULT WINAPI mixerGetControlDetailsW(HMIXEROBJ,MIXERCONTROLDETAILS,DWORD);
WINMMAPI MMRESULT WINAPI mixerSetControlDetails(HMIXEROBJ,MIXERCONTROLDETAILS,DWORD);


#######################################################################
# MMSystem TIME

WINMMAPI MMRESULT WINAPI timeGetSystemTime(MMTIME,UINT);
WINMMAPI DWORD WINAPI timeGetTime();
# WINMMAPI MMRESULT WINAPI timeSetEvent(UINT,UINT,[in]TIMECALLBACK,DWORD_PTR,UINT);
WINMMAPI MMRESULT WINAPI timeKillEvent(UINT);
WINMMAPI MMRESULT WINAPI timeGetDevCaps(TIMECAPS,UINT);
WINMMAPI MMRESULT WINAPI timeBeginPeriod(UINT);
WINMMAPI MMRESULT WINAPI timeEndPeriod(UINT);

#######################################################################
# MMSystem JOYSTICK

#######################################################################
# MMSystem MMIO

#######################################################################
# MMSystem MCI

